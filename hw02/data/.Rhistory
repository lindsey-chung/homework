diesel_count = count(diesel, 'make')
diesel_count[which.max(diesel$freq), 'make']
diesel_count
diesel
?table
diesel_count = table(diesel)
diesel_count = table(diesel)
diesel = cars[cars$fuel_type == 'diesel', 'make']
diesel_count = table(diesel)
diesel_count
diesel_count[which.max(diesel_count$freq), 'make']
diesel_count[which.max(diesel_count), 'make']
diesel_count[which.max(diesel_count)]
cars[which.max(cars$horsepower), 'price']
?cor
quantitative = Filter(is.numeric, na.omit(cars))
quantitative
quantitative = Filter(is.numeric, na.omit(cars))[ , c(-1, -2)]
quantitative
correlation = cor(qdat)
is.data.frame(qdat)
qdat = Filter(is.numeric, na.omit(cars))[ , c(-1, -2)]
correlation = cor(qdat)
correlation
install.packages('corrplot')
library(corrplot)
corrplot(correlation, method = 'color')
corrplot(correlation, method = 'circle')
corrplot(correlation, method = 'color')
corrplot(correlation, method = 'color')
prcomp(
qdat,
scale. = true
)
prcomp(
qdat,
scale. = TRUE
)
pca_cars = prcomp(
qdat,
scale. = TRUE
)
eigenvalues = pca_cars$sdev^2
eigenvalues
proportion = sum(eigenvalues[1:3]) / sum(eigenvalues)
proportion
sum(eigenvalues[1:3])
sum(eigenvalues)
?plot
plot(
pca_cars,
type = 'p'
)
df_pca = data.frame(pca_cars$x)
plot(
df_pca$PC1,
df_pca$PC2,
type = 'p'
)
plot(
df_pca$PC1,
df_pca$PC2,
type = 'p'
)
df_loading = data.frame(pca_cars$rotation)
plot(
df_loading$PC1,
df_loading$PC2,
type = 'p'
)
plot(
df_pca$PC1,
df_pca$PC2,
type = 'p'
)
plot(
df_loading$PC1,
df_loading$PC2,
type = 'p'
)
body_freq = order(count(cars[ , 'body_style']), decreasing = TRUE)
library(plyr)
body_freq = order(count(cars[ , 'body_style']), decreasing = TRUE)
?count
?table
body_freq = order(table(cars[ , 'body_style']), decreasing = TRUE)
barplot(
body_freq[ , 'freq'],
names.arg = body_freq[ , 'x'],
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
body_freq
body_freq = table(cars[ , 'body_style']), decreasing = TRUE
body_freq = table(cars[ , 'body_style'])
body_freq
body_freq = order(table(cars[ , 'body_style']), decreasing = TRUE)
body_freq
body_freq = table(cars[ , 'body_style'])
ordered_body_freq = order(body_freq, decreasing = TRUE)
barplot(
ordered_body_freq[ , 'freq'],
names.arg = body_freq[ , 'x'],
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
ordered_body_freq
ordered_body_freq = order(body_freq[2, ], decreasing = TRUE)
body_freq
body_freq = data.frame(table(cars[ , 'body_style']))
ordered_body_freq = order(body_freq[2, ], decreasing = TRUE)
barplot(
ordered_body_freq[ , 'freq'],
names.arg = body_freq[ , 'x'],
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
ordered_body_freq
body_freq = table(cars[ , 'body_style'])
body_freq
class(body_freq)
body_freq = data.frame(table(cars[ , 'body_style']))
body_freq
ordered_body_freq = order(body_freq[ , 2], decreasing = TRUE)
ordered_body_freq
ordered_body_freq = body_freq[order(body_freq[ , 2], decreasing = TRUE), ]
ordered_body_freq
barplot(
ordered_body_freq[ , 'freq'],
names.arg = body_freq[ , 'x'],
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
barplot(
ordered_body_freq[ , 'freq'],
names.arg = ordered_body_freq[ , 'x'],
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
barplot(
ordered_body_freq$freq,
names.arg = ordered_body_freq$Var1,
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
barplot(
ordered_body_freq$freq,
#names.arg = ordered_body_freq$Var1,
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
barplot(
ordered_body_freq$Freq,
#names.arg = ordered_body_freq$Var1,
cex.names = 0.76,
xlab = 'Body Type',
ylab = 'Frequency',
main = "Body Style Barplot"
)
ggplot(data = dat) +
geom_density(aes(x = salary))
ggplot(data = dat) +
geom_histogram(aes(x = points2, bidwidth = 50))
ggplot(data = dat) +
geom_histogram(aes(x = points2, binwidth = 50))
ggplot(data = dat) +
geom_histogram(aes(x = points2, stat_bin(50)))
ggplot(data = dat) +
geom_histogram(aes(x = points2, binwidth = 50))
ggplot(data = dat) +
geom_histogram(aes(x = points2), binwidth = 50)
ggplot(data = dat) +
geom_histogram(aes(x = points2), binwidth = 50)
ggplot(data = dat) +
geom_bar(aes(x = position))
ggplot(data = filter(dat, position == 'C')) +
geom_point(aes(x = experience, y = salary)
ggplot(data = filter(dat, position == 'C')) +
ggplot(data = filter(dat, position == 'C')) +
geom_point(aes(x = experience, y = salary))
ggplot(data = filter(dat, position == 'C')) +
geom_point(aes(x = experience, y = salary)) +
geom_smooth(aes(x = experience, y = salary))
ggplot(data = filter(dat, position == 'C')) +
geom_point(aes(x = experience, y = salary)) +
geom_smooth()
ggplot(data = filter(dat, position == 'C')) +
geom_point(aes(x = experience, y = salary)) +
geom_smooth(aes(x = experience, y = salary))
facet_grid( ~ position)
ggplot(data = filter(dat, position == 'C')) +
geom_point(aes(x = experience, y = salary)) +
geom_smooth(aes(x = experience, y = salary), method = loess)
facet_grid( ~ position)
facet_wrap( ~ position)
facet_grid( ~ position)
facet_wrap(~ position)
facet_wrap(~ position)
geom_point() +
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(alpha = 0.7) +
facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(alpha = 0.7) +
facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(alpha = 0.6) +
facet_wrap(~ team)
ggplot(data = dat, aes(x = age)) +
geom_density() +
facet_wrap(~ team)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_points() +
facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() +
facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) +
gem_point(alpha = 0.6) +
facet_wrap(~ position) +
geom_density2d()
ggplot(data = dat, aes(x = height, y = weight)) +
gem_point(alpha = 0.6) +
facet_wrap(~ position) +
geom_density2d(gem_point)
ggplot(data = dat, aes(x = height, y = weight)) +
gem_point(alpha = 0.6) +
facet_wrap(~ position) +
geom_density2d()
ggplot(data = dat, aes(x = age)) +
geom_density() +
facet_wrap(~ team)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position) +
geom_density2d()
ggplot(data = filter(dat, team == "GSW"), aes(x = experience, y = salary)) +
geom_point() +
theme_bw()
ggplot(data = filter(dat, team == "GSW"), aes(x = experience, y = salary)) +
geom_point() +
#theme_bw()
ggplot(data = filter(dat, team == "GSW"), aes(x = experience, y = salary)) +
geom_point() +
#theme_bw()
ggplot(data = filter(dat, team == "GSW"), aes(x = experience, y = salary)) +
geom_point()
ggplot(data = filter(dat, team == "GSW"), aes(x = experience, y = salary)) +
geom_point() +
theme_bw()
ggplot(data = filter(dat, team == "GSW"), aes(x = experience, y = salary)) +
geom_point()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position) +
theme_minimal()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position) +
theme_dark()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position) +
theme_classic()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.6) +
facet_wrap(~ position) +
theme_minimal()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point(alpha = 0.5) +
facet_wrap(~ position) +
theme_minimal()
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Desktop/hw-stat133/lab05")
setwd("~/Desktop/hw-stat133/lab05/report")
setwd("~/Desktop/hw-stat133/lab06/code")
?read_csv
read_csv(nba2017-players.csv)
read_csv('nba2017-players.csv')
read_csv('nba2017-players.csv', ../data)
read_csv('nba2017-players.csv', '../data')
read_csv('../data/nba2017-players.csv')
dat = read_csv('../data/nba2017-players.csv')
warriors = arrange(
filter(dat, team == 'GSW'),
desc(salary)
)
warriosr
warriors
?write.csv
write.csv(warriors, '../data/warriors.csv', row.names = TRUE)
warriors = arrange(
filter(dat, team == 'GSW'),
salary
)
write.csv(warriors, '../data/warriors.csv', row.names = TRUE)
lakers = arrange(
filter(dat, team == 'LAL'),
desc(experience)
)
write.csv(lakers, '..data/lakers.csv', now.names = TRUE)
write.csv(lakers, '../data/lakers.csv', now.names = TRUE)
write.csv(lakers, '../data/lakers.csv', row.names = TRUE)
head(lakers)
sink()
sink(file = '../output/data-structure.txt')
str(dat)
sink()
summary(warriors)
sink(file = '../output/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '../output/summary-lakers.txt')
summary(lakers)
sink()
?png
?plot
png(filename = '../images/scatter-height-weight.png')
plot(dat$height, dat$weight, pch = 20, xlab = 'Height', ylab = 'Weight')
dev.off()
?png
png(filename = '../images/scatter-height-weight2.png',
width = 800, height = 800)
plot(dat$height, dat$weight, pch = 20, xlab = 'Height', ylab = 'Weight')
dev.off()
?hist
jpeg(filename = '../images/age.jpeg',
width = 600, height = 400)
hist(age, xlab = 'Age', ylab = 'Frequency')
dev.off()
?pdf
?plot
?png
pdf(filename = '../images/age2.pdf',
width = 7, height = 5, units = "in")
hist(age, xlab = 'Age', ylab = 'Frequency')
dev.off()
?pdf
jpeg(filename = '../images/age.jpeg',
width = 600, height = 400)
hist(dat$age, xlab = 'Age', ylab = 'Frequency')
dev.off()
?png
pdf(file = '../images/age2.pdf',
width = 7, height = 5, units = "in")
hist(dat$age, xlab = 'Age', ylab = 'Frequency')
dev.off()
pdf(file = '../images/age2.pdf',
width = 7, height = 5)
pdf(file = '../images/age2.pdf',
width = 7, height = 5)
hist(dat$age, xlab = 'Age', ylab = 'Frequency')
dev.off()
# Exporting ggplots
gg_pts_salary = ggplot(data = dat) +
geom_point(aes(x = points, y = salary))
gg_pts_salary
gg_pts_salary
?ggsave
ggsave('../images/points_salary.pdf', plot = gg_pts_salary,
width = 7, height = 5)
gg_ht_wt_positions = ggplot(data = dat) +
geom_point(aes(x = height, y = weight)) +
facet_wrap(~ position)
ggsave('../images/height_weight_by_position.pdf', plot = gg_ht_wt_positions,
width = 6, height = 4)
write_csv(lakers, '../data/lakers.csv')
write.csv(warriors, '../data/warriors.csv', row.names = FALSE)
# More "dplyr" using the pipe operator %>%
dat %>%
filter(team == "LAL") %>%
select(player)
dat %>%
filter(team == "GSW" & position == "PG") %>%
select(player, salary)
dat %>%
filter(experience > 10 & salary <= 10000000) %>%
select(player, age, team)
dat %>%
filter(experience = 0 & age == 20) %>%
select(player, team, height, weight) %>%
slice(1:5)
dat %>%
filter(experience == 0 & age == 20) %>%
select(player, team, height, weight) %>%
slice(1:5)
View(dat)
gsw_mpg = dat %>%
mutate(min_per_game = minutes / games) %>%
select(player, experience, min_per_game) %>%
arrrange(desc(min_per_game))
gsw_mpg = dat %>%
mutate(min_per_game = minutes / games) %>%
select(player, experience, min_per_game) %>%
arrange(desc(min_per_game))
gsw_mpg
gsw_mpg = dat %>%
filter(team == "GSW")
gsw_mpg
gsw_mpg = dat %>%
filter(team == "GSW") %>%
mutate(min_per_game = minutes / games) %>%
select(player, experience, min_per_game) %>%
arrange(desc(min_per_game))
gsw_mpg
dat %>%
group_by(team) %>%
summarise(avg = mean(points3)) %>%
select(team, avg) %>%
arragne(avg) %>%
slice(1:5)
dat %>%
group_by(team) %>%
summarise(avg = mean(points3)) %>%
select(team, avg) %>%
arrange(avg) %>%
slice(1:5)
dat %>%
group_by(team) %>%
select(team, avg) %>%
summarise(avg = mean(points3)) %>%
arrange(avg) %>%
slice(1:5)
dat %>%
group_by(team) %>%
select(team, points3) %>%
summarise(avg = mean(points3)) %>%
arrange(avg) %>%
slice(1:5)
dat %>%
group_by(team) %>%
summarise(avg = mean(points3)) %>%
select(team, avg) %>%
arrange(avg) %>%
slice(1:5)
dat %>%
filter(position == "PF" & experience >= 5 & age <= 10) %>%
summarise(avg = mean(age)) %>%
summarise(sd = sd(age)) %>%
select(player, avg, sd)
dat %>%
filter(position == "PF" & experience >= 5 & age <= 10) %>%
summarise(avg = mean(age)) %>%
summarise(sd = sd(age)) %>%
select(player, avg, sd)
summarise(avg = mean(age))
mean(dat$age)
summarise(avg = mean(dat$age))
summarise(dat, avg = mean(age))
dat %>%
filter(position == "PF" & experience >= 5 & age <= 10) %>%
summarise(avg = mean(age)) %>%
summarise(sd = sd(age)) %>%
summarise(dat, avg = mean(age))
dat %>%
filter(position == "PF" & experience >= 5 & age <= 10) %>%
summarise(avg = mean(age))
dat %>%
filter(position == "PF" & experience >= 5 & experience <= 10) %>%
summarise(avg = mean(age))
dat %>%
filter(position == "PF" & experience >= 5 & experience <= 10) %>%
summarise(avg = mean(age)) %>%
summarise(sd = sd(age))
dat %>%
filter(position == "PF" & experience >= 5 & experience <= 10) %>%
summarise(avg = mean(age), sd = sd(age))
setwd("~/Desktop/hw-stat133/hw02/data")
download.file(url = https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/andre-iguodala.csv, destfile = andre-iguodala.csv)
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/andre-iguodala.csv', destfile = andre-iguodala.csv)
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/andre-iguodala.csv', destfile = 'andre-iguodala.csv'')
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/andre-iguodala.csv', destfile = 'andre-iguodala.csv')
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/andre-iguodala.csv', destfile = 'andre-iguodala.csv')
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/draymond-green.csv', destfile = 'draymond-green.csv')
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/kevin-durant.csv', destfile = 'kevin-durant.csv')
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/klay-thompson.csv', destfile = 'klay-thompson.csv')
download.file(url = 'https://github.com/ucb-stat133/stat133-spring-2018/blob/master/data/stephen-curry.csv', destfile = 'stephen-curry.csv')
read.csv('andre-iguodala.csv')
download.file(url = 'stat133-spring-2018/data/andre-iguodala.csv', destfile = 'andre-iguodala.csv')
download.file(url = 'https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/andre-iguodala.csv', destfile = 'andre-iguodala.csv')
download.file(url = 'https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/draymond-green.csv', destfile = 'draymond-green.csv')
download.file(url = 'https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/kevin-durant.csv', destfile = 'kevin-durant.csv')
download.file(url = 'https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/klay-thompson.csv', destfile = 'klay-thompson.csv')
download.file(url = 'https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/data/stephen-curry.csv', destfile = 'stephen-curry.csv')
head(read.csv(stephen.curry.csv))
head(read.csv(stephen-curry.csv))
